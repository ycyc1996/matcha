{"version":3,"sources":["webpack:///../../../src/isomorphic/controller.ts","webpack:////Users/yangyichen/Desktop/Github/matcha/isomorphic/controller.js","webpack:///./src/home/controller.js","webpack:///./src/home/model.js","webpack:///./src/home/view.jsx"],"names":["Controller","View","initialState","actions","a","setTimeout","store","getDispatchers","UPDATE_MESSAGES","Date","AppController","count","form","name","age","messages","INCREMENT_COUNT","state","RESET_COUNT","UPDATE_FORM_DATA","payload","Messages","map","message","key","dispatchers","ctrl","console","log","id","onClick","type","value","onChange","e","target","alert","JSON","stringify"],"mappings":";;;;4GAGA,MAaE,SAAa,GAZT,KAAJ,KAAe,EACX,KAAJ,OAAiB,EACb,KAAJ,MAAkC,KAWhC,QAAQ,IAAI,eACZ,QAAQ,IAAI,I;;;;6DClBhB,2GACeA,YAAf,G;;;;u0DCKS,oB,kBACD,G,oBACG,O,kBACFC,W,mBACC,CAAEC,4BAAcC,oB,uCAEV,sBAAAC,EAAA,sDACZC,YAAW,WACT,EAAKC,MAAMC,iBAAiBC,gBAAgB,CAC1C,oBAA2B,IAAIC,KAC/B,sBAA6B,IAAIA,KACjC,kBAAyB,IAAIA,SAE9B,KAPS,4C,YAPaC,Y;;;;k+BCLtB,IAAMR,EAAe,CAC1BS,MAAO,EACPC,KAAM,CACJC,KAAM,GACNC,IAAK,IAEPC,SAAU,IAGCZ,EAAU,CAErBa,gBAAiB,SAACC,GAChB,cACKA,GADL,IAEEN,MAAOM,EAAMN,MAAQ,KAKzBO,YAAa,SAACD,GACZ,cACKA,GADL,IAEEN,MAAQ,KAIZQ,iBAAkB,SAACF,EAAOG,GACxB,cACKH,GADL,IAEEL,KAAM,EAAF,KACCK,EAAML,MACNQ,MAKTZ,gBAAiB,SAACS,EAAOG,GACvB,cACKH,GADL,IAEEF,SAAU,IAAIK,Q;;;;6DCvCpB,qEAgCMC,EAAW,SAAC,GAAsB,QAApBN,gBAAoB,MAAT,GAAS,EACtC,OACE,4BACGA,EAASO,KAAI,SAAAC,GAAO,OAAI,wBAAIC,IAAKD,GAAUA,QAKnCtB,UAtCF,SAAC,GAAiC,IAA/BgB,EAA+B,EAA/BA,MAAOQ,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KAClCC,QAAQC,IAAIX,EAAOQ,EAAaC,GAShC,OACE,yBAAKG,GAAG,YACN,uCACA,sCAAaZ,EAAMN,OACnB,yBAAKmB,QAAS,WACZH,QAAQC,IAAI,SACZH,EAAYT,oBAFd,gBAIA,6BACA,kBAACK,EAAD,CAAUN,SAAUE,EAAMF,WAC1B,6BACA,2BAAOgB,KAAK,OAAOC,MAAOf,EAAML,KAAKC,KAAMoB,SAd1B,SAACC,GAAD,OAAOT,EAAYN,iBAAiB,CAAEN,KAAMqB,EAAEC,OAAOH,WAetE,6BACA,2BAAOD,KAAK,OAAOC,MAAOf,EAAML,KAAKE,IAAKmB,SAf1B,SAACC,GAAD,OAAOT,EAAYN,iBAAiB,CAAEL,IAAKoB,EAAEC,OAAOH,WAgBpE,6BACA,4BAAQF,QAtBG,WACbM,MAAMC,KAAKC,UAAUrB,EAAML,SAqBzB","file":"js/home.30b18676130377e803c4.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AppController = /** @class */ (function () {\n    function AppController(context) {\n        this.ssr = false;\n        this.pageId = 0;\n        this.store = null;\n        console.log('constructor');\n        console.log(context);\n    }\n    return AppController;\n}());\nexports.default = AppController;\n//# sourceMappingURL=controller.js.map","import Controller from '../dist/src/isomorphic/controller'\nexport default Controller\n","import AppController from 'matcha/isomorphic/controller'\nimport React from 'react'\nimport { actions, initialState } from './model'\nimport View from './view'\n\nexport default class extends AppController {\n  name = 'home page!!!!!!!'\n  ssr = true\n  pageId = 10001\n  View = View\n  Model = { initialState, actions }\n\n  afterRender = async () => {\n    setTimeout(() => {\n      this.store.getDispatchers().UPDATE_MESSAGES([\n        'hello world!' + '  —— ' + new Date(),\n        'hi yichenyang!' + '  —— ' + new Date(),\n        'yo matcha!' + '  —— ' + new Date()\n      ])\n    }, 1000)\n  }\n}\n","export const initialState = {\n  count: 0,\n  form: {\n    name: '',\n    age: '',\n  },\n  messages: []\n}\n\nexport const actions = {\n\n  INCREMENT_COUNT: (state) => {\n    return {\n      ...state,\n      count: state.count + 1,\n    }\n  },\n\n\n  RESET_COUNT: (state) => {\n    return {\n      ...state,\n      count:  0\n    }\n  },\n\n  UPDATE_FORM_DATA: (state, payload) => {\n    return {\n      ...state,\n      form: {\n        ...state.form,\n        ...payload,\n      }\n    }\n  },\n\n  UPDATE_MESSAGES: (state, payload) => {\n    return {\n      ...state,\n      messages: [...payload]\n    }\n  }\n}\n","import React from 'react'\n\nconst View = ({ state, dispatchers, ctrl }) => {\n  console.log(state, dispatchers, ctrl)\n\n  const submit = () => {\n    alert(JSON.stringify(state.form))\n  }\n\n  const onNameChange = (e) => dispatchers.UPDATE_FORM_DATA({ name: e.target.value })\n  const onAgeChange = (e) => dispatchers.UPDATE_FORM_DATA({ age: e.target.value })\n\n  return (\n    <div id=\"app-root\">\n      <h1>my home</h1>\n      <h2>count: { state.count }</h2>\n      <div onClick={() => {\n        console.log('click')\n        dispatchers.INCREMENT_COUNT()\n      }}>click me!!!!</div>\n      <br/>\n      <Messages messages={state.messages}/>\n      <br/>\n      <input type=\"text\" value={state.form.name} onChange={onNameChange}/>\n      <br/>\n      <input type=\"text\" value={state.form.age} onChange={onAgeChange}/>\n      <br/>\n      <button onClick={submit}>submit</button>\n    </div>\n  )\n}\n\nconst Messages = ({ messages = [] }) => {\n  return (\n    <ul>\n      {messages.map(message => <li key={message}>{message}</li>)}\n    </ul>\n  )\n}\n\nexport default View\n"],"sourceRoot":""}